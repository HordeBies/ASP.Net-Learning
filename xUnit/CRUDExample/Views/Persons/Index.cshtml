@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}

<form asp-controller="Persons" asp-action="Index" method="get">

    <h1>Persons</h1>

    <a asp-controller="Persons" asp-action="Create">Create Person</a>
    <a asp-controller="Persons" asp-action="PersonsPDF">Download as PDF</a>
    <a asp-controller="Persons" asp-action="PersonsCSV">Download as CSV</a>
    <a asp-controller="Persons" asp-action="PersonsExcel">Download as Excel</a>
    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">
                @foreach (KeyValuePair<string, string> field in ViewBag.SearchFields)
                {
                    if (field.Key == ViewBag.searchBy)
                    {
                        <option value="@field.Key" selected="selected">@field.Value</option>
                    }
                    <option value="@field.Key">@field.Value</option>
                }
            </select>
        </div>
        <div class="flex-1">
            <input type="search" id="Search" class="form-input" name="searchString" placeholder="Search" value="@ViewBag.searchString" />
        </div>
        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a asp-controller="Persons" asp-action="Index" class="link-hover">Clear All</a>
        </div>
    </div>

    <table class="table w-100 mt">
        <thead>
            <tr>
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.PersonName)},
                {"DisplayName", "Person Name"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.Email)},
                {"DisplayName", "Email"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                {"DisplayName", "Date of Birth"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.Age)},
                {"DisplayName", "Age"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.Gender)},
                {"DisplayName", "Gender"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.Country)},
                {"DisplayName", "Country"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.Address)},
                {"DisplayName", "Address"}
                })
                @await Html.PartialAsync("_GridColumnHeader", new(ViewData){
                {"ColumnName", nameof(PersonResponse.ReceiveNewsLetters)},
                {"DisplayName", "Receive News Letters"}
                })
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td class="w-10">@person.PersonName</td>
                    <td class="w-15">@person.Email</td>
                    <td class="w-10">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                    <td class="w-5">@person.Age</td>
                    <td class="w-10">@person.Gender</td>
                    <td class="w-10">@person.Country</td>
                    <td class="w-10">@person.Address</td>
                    <td class="w-15">@person.ReceiveNewsLetters</td>
                    <td class="w-10"><a asp-controller="Persons" asp-action="Edit" asp-route-PersonID="@person.PersonID">Edit</a> <a class="ml" asp-controller="Persons" asp-action="Delete" asp-route-PersonID="@person.PersonID">Delete</a></td>
                </tr>
            }
        </tbody>
    </table>
</form>